@model Hearts4Kids.Models.BioDetailsViewModel

@{
    ViewBag.Title = "Update Biography";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=>model.UserId)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control disabled", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control disabled", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { HtmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Trustee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Trustee, new { HtmlAttributes = new { @class = "form-control checkbox" } })
                    @Html.ValidationMessageFor(model => model.Trustee, "", new { @class = "text-danger" })
                </div>
            </div>
            <p class='help-block col-md-10'>@Html.DescriptionFor(model => model.Trustee)</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Team, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Team, "please select...", new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger" })
            </div>
            <p class='help-block col-md-10 col-md-push-2'>@Html.DescriptionFor(model => model.Team)</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Profession, "please select...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
            </div>
            <p class='help-block col-md-10 col-md-push-2'>@Html.DescriptionFor(model => model.Profession)</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CitationDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CitationDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CitationDescription, "", new { @class = "text-danger" })
            </div>
            <p class='help-block col-md-10 col-md-push-2'>@Html.DescriptionFor(model=>model.CitationDescription)</p>
        </div>
        @*
    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
        *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
